{
  "openapi": "3.0.1",
  "info": {
    "title": "My User Project CRUD",
    "description": "My User Project Application API",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:8080/api/v1"
    },
    {
      "url": "https://localhost:8080/api/v1"
    }
  ],
  "tags": [
    {
      "name": "Users",
      "description": "API for users in the system"
    }
  ],
  "paths": {
    "/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get all users in system",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Users"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create users",
        "description": "Create new user in system",
        "requestBody": {
          "description": "User that we want to create",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "New user is created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "user"
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete all users in system",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Users"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "get one User by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of user that we want to find",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "get user successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update user with give ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of user that we want to find",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "User with new values of properties",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/updateUser"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "User is updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "user"
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete user with given ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of user that we want to find",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User is deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Login",
        "description": "Login",
        "requestBody": {
          "description": "Login",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "user"
      }
    },
    "/users/auth/validate": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Check auth",
        "responses": {
          "200": {
            "description": "Will send `Authenticated`",
            "content": {}
          },
          "403": {
            "description": "You do not have necessary permissions for the resource",
            "content": {}
          }
        },
        
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example":"user@example.com"
          },
          "password": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "avatar": {
            "type": "string",
            "example": "https://chat-app-server-hero.herokuapp.com/public/images/avatar-default.jpg"
          },
          "coverPhoto": {
            "type": "string"
          },
          "refreshToken": {
            "type": "string"
          },
          "isOnline": {
            "type":"boolean"
          },
          "isBlock": {
            "type":"boolean"
          },
          "lastLogin": {
            "type": "string", 
            "format": "date-time"
          },
          "createdAt": {
            "type": "string", 
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string", 
            "format": "date-time"
          },
          "gender": {
            "type":"string",
            "enum":["unknow","male","female"]
          },
          "role": {
            "type":"string",
            "enum":["user","admin"]
          },
          "languages": {
            "type":"string",
            "enum":["vi","en"]
          },
          "verify": {
            "type":"boolean",
            "example":false
          },
          "available": {
            "type":"boolean"
          }

        }
      },
      "updateUser": {
        "required": [
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "avatar": {
            "type": "string"
          },
          "coverPhoto": {
            "type": "string"
          },
          "refreshToken": {
            "type": "string"
          },
          "isOnline": {
            "type":"boolean"
          },
          "isBlock": {
            "type":"boolean"
          },
          "lastLogin": {
            "type": "string", 
            "format": "date-time"
          },
          "gender": {
            "type":"string",
            "enum":["unknow","male","female"]
          },
          "role": {
            "type":"string",
            "enum":["user","admin"]
          },
          "languages": {
            "type":"string",
            "enum":["vi","en"]
          }

        }
      },
      "Users": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/User"
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}